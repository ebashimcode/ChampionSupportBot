const { Scenes, Markup } = require('telegraf');
const { getUserCount } = require('../../data/DB');
const { adminMenu } = require('../../const');

const adminPanelScene = new Scenes.BaseScene('ADMIN_PANEL_SCENE');

adminPanelScene.enter(async (ctx) => {
    await ctx.reply(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        Markup.keyboard(adminMenu).resize().oneTime()
    );
});

adminPanelScene.hears('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä', async (ctx) => {
    const userCount = await getUserCount();
    await ctx.reply(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}`);
});

adminPanelScene.hears('–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üì¢', async (ctx) => {
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:');
    ctx.scene.enter('BROADCAST_SCENE');
});

adminPanelScene.hears('–ù–∞–∑–∞–¥ üîô', async (ctx) => {
    await ctx.reply(
        '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–æ–µ–∫—Ç–∞ Champion Casino.\n–ü–æ –∫–∞–∫–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤—ã –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å?',
        Markup.keyboard(adminMenu).resize().oneTime()
    );
    ctx.scene.leave();
});

module.exports = adminPanelScene;
